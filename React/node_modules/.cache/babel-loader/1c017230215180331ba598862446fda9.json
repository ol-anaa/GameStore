{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\GameStore\\\\React\\\\src\\\\components\\\\ListaProdutos\\\\Produtos.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport UserService from '../../Services/UserService';\nimport './Produtos.css';\nimport Main from '../template/Main';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Import das imagens \n\nimport img from '../../assets/ListaJogos/Mario.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"Lista de Produtos\";\nconst urlAPI = \"http://localhost:5255/api/produto\";\nconst initialState = {\n  produto: {\n    id_produto: 0,\n    valor: 0.0,\n    nome: '',\n    descricao: ''\n  },\n  lista: []\n};\nexport default function AlterarProd(props) {\n  _s();\n\n  const [lista, setLista] = useState([]);\n  const [mens, setMens] = useState([]);\n  /*    \r\n      axios(urlAPI).then(resp => {\r\n          this.setState({ lista: resp.data })\r\n      })\r\n  }\r\n  */\n\n  useEffect(() => {\n    UserService.getAdmBoard().then(response => {\n      console.log(\"useEffect getAdmBoard: \" + response.data);\n      setLista(response.data);\n      setMens(null);\n    }, error => {\n      const _mens = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n      setMens(_mens);\n      console.log(\"_mens: \" + _mens);\n    });\n  }, []);\n  /*   \r\n          limpar() {\r\n              this.setState({ aluno: initialState.aluno });\r\n          }\r\n  \r\n          salvar() {\r\n              let codigoCurso = document.getElementById('codigoCurso').value;\r\n              const aluno = this.state.aluno;\r\n  \r\n              aluno.codCurso = Number(codigoCurso);\r\n              const metodo = aluno.id ? 'put' : 'post';\r\n              const url = aluno.id ? `${urlAPI}/${aluno.id}` : urlAPI;\r\n              axios[metodo](url, aluno)\r\n                  .then(resp => {\r\n                      const lista = this.getListaAtualizada(resp.data)\r\n                      this.setState({ aluno: initialState.aluno, lista })\r\n                  })\r\n          }\r\n  \r\n  \r\n          getListaAtualizada(aluno, add = true) {\r\n              const lista = this.state.lista.filter(a => a.id !== aluno.id);\r\n              if (add) lista.unshift(aluno);\r\n              return lista;\r\n          }\r\n  \r\n          atualizaCampo(event) {\r\n              //clonar usuário a partir do state, para não alterar o state diretamente\r\n              const aluno = { ...this.state.aluno };\r\n              //usar o atributo NAME do input para identificar o campo a ser atualizado\r\n              aluno[event.target.name] = event.target.value;\r\n              //atualizar o state\r\n              this.setState({ aluno });\r\n          }\r\n  \r\n          carregar(aluno) {\r\n              this.setState({ aluno })\r\n          }\r\n  \r\n          remover(aluno) {\r\n              const url = urlAPI + \"/\" + aluno.id;\r\n              if (window.confirm(\"Confirma remoção do aluno: \" + aluno.ra)) {\r\n                  console.log(\"entrou no confirm\");\r\n                  axios['delete'](url, aluno)\r\n                      .then(resp => {\r\n                          const lista = this.getListaAtualizada(aluno, false)\r\n                          this.setState({ aluno: initialState.aluno, lista })\r\n                      })\r\n              }\r\n          }\r\n  \r\n  \r\n      const renderTable = () => {\r\n              return (\r\n                  <div className=\"inclui-container\">\r\n                      <label> RA: </label>\r\n                      <input\r\n                          type=\"text\"\r\n                          id=\"ra\"\r\n                          placeholder=\"RA do aluno\"\r\n                          className=\"form-input\"\r\n                          name=\"ra\"\r\n  \r\n                          value={this.state.aluno.ra}\r\n  \r\n                          onChange={e => this.atualizaCampo(e)}\r\n                      />\r\n                      <label> Nome: </label>\r\n                      <input\r\n                          type=\"text\"\r\n                          id=\"nome\"\r\n                          placeholder=\"Nome do aluno\"\r\n                          className=\"form-input\"\r\n                          name=\"nome\"\r\n  \r\n                          value={this.state.aluno.nome}\r\n  \r\n                          onChange={e => this.atualizaCampo(e)}\r\n                      />\r\n  \r\n                      <label> Código do Curso: </label>\r\n                      <select name=\"nomeCurso\" id=\"codigoCurso\">\r\n                          {this.state.listaCurso.map((curso) =>\r\n                              <option key={curso.id} value={curso.codCurso}>{curso.nomeCurso}</option>\r\n                          )}\r\n                      </select>\r\n  \r\n                      <button className=\"btnSalvar\"\r\n                          onClick={e => this.salvar(e)} >\r\n                          Salvar\r\n                      </button>\r\n                      <button className=\"btnCancelar\"\r\n                          onClick={e => this.limpar(e)} >\r\n                          Cancelar\r\n                      </button>\r\n                  </div>\r\n              )\r\n          }\r\n  */\n\n  const renderTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.lista.map(produto => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          class: \"Img\",\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: produto.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: produto.descricao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn\",\n              variant: \"secondary\",\n              children: \"Compre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    className: \"main\",\n    title: title,\n    children: mens ? \"Problema com conexão ou autorização (contactar administrador).\" : renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 17\n  }, this);\n}\n\n_s(AlterarProd, \"25ofSusWDIKMylQd8fd7IyUiuFo=\");\n\n_c = AlterarProd;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlterarProd\");","map":{"version":3,"names":["axios","React","useEffect","useState","UserService","Main","Card","Button","img","title","urlAPI","initialState","produto","id_produto","valor","nome","descricao","lista","AlterarProd","props","setLista","mens","setMens","getAdmBoard","then","response","console","log","data","error","_mens","message","toString","renderTable","state","map","width"],"sources":["C:/Users/adria/Documents/GitHub/GameStore/React/src/components/ListaProdutos/Produtos.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport UserService from '../../Services/UserService';\r\nimport './Produtos.css';\r\nimport Main from '../template/Main';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//Import das imagens \r\nimport img from '../../assets/ListaJogos/Mario.jpg';\r\n\r\nconst title = \"Lista de Produtos\";\r\n\r\nconst urlAPI = \"http://localhost:5255/api/produto\";\r\n\r\nconst initialState = {\r\n    produto: { id_produto: 0, valor: 0.0, nome: '', descricao: '' },\r\n    lista: [],\r\n}\r\n\r\n\r\nexport default function AlterarProd(props) {\r\n\r\n    const [lista, setLista] = useState([]);\r\n    const [mens, setMens] = useState([]);\r\n\r\n        /*    \r\n            axios(urlAPI).then(resp => {\r\n                this.setState({ lista: resp.data })\r\n            })\r\n        }\r\n        */\r\n        useEffect(() => {\r\n            UserService.getAdmBoard().then(\r\n                (response) => {\r\n                    console.log(\"useEffect getAdmBoard: \" + response.data)\r\n                    setLista(response.data);\r\n                    setMens(null);\r\n                },\r\n                (error) => {\r\n                    const _mens =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setMens(_mens);\r\n                    console.log(\"_mens: \" + _mens);\r\n                }\r\n            );\r\n        }, []);\r\n\r\n/*   \r\n        limpar() {\r\n            this.setState({ aluno: initialState.aluno });\r\n        }\r\n\r\n        salvar() {\r\n            let codigoCurso = document.getElementById('codigoCurso').value;\r\n            const aluno = this.state.aluno;\r\n\r\n            aluno.codCurso = Number(codigoCurso);\r\n            const metodo = aluno.id ? 'put' : 'post';\r\n            const url = aluno.id ? `${urlAPI}/${aluno.id}` : urlAPI;\r\n            axios[metodo](url, aluno)\r\n                .then(resp => {\r\n                    const lista = this.getListaAtualizada(resp.data)\r\n                    this.setState({ aluno: initialState.aluno, lista })\r\n                })\r\n        }\r\n\r\n\r\n        getListaAtualizada(aluno, add = true) {\r\n            const lista = this.state.lista.filter(a => a.id !== aluno.id);\r\n            if (add) lista.unshift(aluno);\r\n            return lista;\r\n        }\r\n\r\n        atualizaCampo(event) {\r\n            //clonar usuário a partir do state, para não alterar o state diretamente\r\n            const aluno = { ...this.state.aluno };\r\n            //usar o atributo NAME do input para identificar o campo a ser atualizado\r\n            aluno[event.target.name] = event.target.value;\r\n            //atualizar o state\r\n            this.setState({ aluno });\r\n        }\r\n\r\n        carregar(aluno) {\r\n            this.setState({ aluno })\r\n        }\r\n\r\n        remover(aluno) {\r\n            const url = urlAPI + \"/\" + aluno.id;\r\n            if (window.confirm(\"Confirma remoção do aluno: \" + aluno.ra)) {\r\n                console.log(\"entrou no confirm\");\r\n                axios['delete'](url, aluno)\r\n                    .then(resp => {\r\n                        const lista = this.getListaAtualizada(aluno, false)\r\n                        this.setState({ aluno: initialState.aluno, lista })\r\n                    })\r\n            }\r\n        }\r\n\r\n\r\n    const renderTable = () => {\r\n            return (\r\n                <div className=\"inclui-container\">\r\n                    <label> RA: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"ra\"\r\n                        placeholder=\"RA do aluno\"\r\n                        className=\"form-input\"\r\n                        name=\"ra\"\r\n\r\n                        value={this.state.aluno.ra}\r\n\r\n                        onChange={e => this.atualizaCampo(e)}\r\n                    />\r\n                    <label> Nome: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nome\"\r\n                        placeholder=\"Nome do aluno\"\r\n                        className=\"form-input\"\r\n                        name=\"nome\"\r\n\r\n                        value={this.state.aluno.nome}\r\n\r\n                        onChange={e => this.atualizaCampo(e)}\r\n                    />\r\n\r\n                    <label> Código do Curso: </label>\r\n                    <select name=\"nomeCurso\" id=\"codigoCurso\">\r\n                        {this.state.listaCurso.map((curso) =>\r\n                            <option key={curso.id} value={curso.codCurso}>{curso.nomeCurso}</option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <button className=\"btnSalvar\"\r\n                        onClick={e => this.salvar(e)} >\r\n                        Salvar\r\n                    </button>\r\n                    <button className=\"btnCancelar\"\r\n                        onClick={e => this.limpar(e)} >\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n*/\r\n    const renderTable = () => {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.lista.map((produto) =>\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" class=\"Img\" src={img} />\r\n                            <Card.Body>\r\n                                <Card.Title><h3>{produto.nome}</h3></Card.Title>\r\n                                <Card.Text>\r\n                                    {produto.descricao}\r\n                                </Card.Text>\r\n                                <div>\r\n                                    <Button className='btn' variant=\"secondary\">Compre</Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }       \r\n            return (\r\n                <Main className='main' title={title}>\r\n\r\n                 \r\n    {(mens) ? \"Problema com conexão ou autorização (contactar administrador).\" : renderTable()}\r\n\r\n\r\n                </Main>\r\n            )\r\n        }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}