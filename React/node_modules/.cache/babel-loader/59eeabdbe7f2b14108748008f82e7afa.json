{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\GitHub\\\\GameStore\\\\React\\\\src\\\\components\\\\AlterarProd\\\\AlterarProd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport UserService from '../../Services/UserService';\nimport axios from 'axios';\nimport './AlterarProd.css';\nimport Main from '../template/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"Alteração de produtos\";\nconst urlAPI = \"http://localhost:5255/api/AlterarProduto\";\nconst initialState = {\n  produto: {\n    id_produto: 0,\n    valor: 0.0,\n    nome: '',\n    descricao: ''\n  },\n  lista: []\n};\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport default function AlterarProd(props) {\n  _s();\n\n  const [lista, setLista] = useState([]);\n  const [mens, setMens] = useState([]);\n  /*    \r\n      axios(urlAPI).then(resp => {\r\n          this.setState({ lista: resp.data })\r\n      })\r\n  }\r\n  */\n\n  useEffect(() => {\n    UserService.getAdmBoard().then(response => {\n      console.log(\"useEffect getAdmBoard: \" + response.data);\n      setLista(response.data);\n      setMens(null);\n    }, error => {\n      const _mens = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n      setMens(_mens);\n      console.log(\"_mens: \" + _mens);\n    });\n  }, []);\n  /*   \r\n          limpar() {\r\n              this.setState({ aluno: initialState.aluno });\r\n          }\r\n  \r\n          salvar() {\r\n              let codigoCurso = document.getElementById('codigoCurso').value;\r\n              const aluno = this.state.aluno;\r\n  \r\n              aluno.codCurso = Number(codigoCurso);\r\n              const metodo = aluno.id ? 'put' : 'post';\r\n              const url = aluno.id ? `${urlAPI}/${aluno.id}` : urlAPI;\r\n              axios[metodo](url, aluno)\r\n                  .then(resp => {\r\n                      const lista = this.getListaAtualizada(resp.data)\r\n                      this.setState({ aluno: initialState.aluno, lista })\r\n                  })\r\n          }\r\n  \r\n  \r\n          getListaAtualizada(aluno, add = true) {\r\n              const lista = this.state.lista.filter(a => a.id !== aluno.id);\r\n              if (add) lista.unshift(aluno);\r\n              return lista;\r\n          }\r\n  \r\n          atualizaCampo(event) {\r\n              //clonar usuário a partir do state, para não alterar o state diretamente\r\n              const aluno = { ...this.state.aluno };\r\n              //usar o atributo NAME do input para identificar o campo a ser atualizado\r\n              aluno[event.target.name] = event.target.value;\r\n              //atualizar o state\r\n              this.setState({ aluno });\r\n          }\r\n  \r\n          carregar(aluno) {\r\n              this.setState({ aluno })\r\n          }\r\n  \r\n          remover(aluno) {\r\n              const url = urlAPI + \"/\" + aluno.id;\r\n              if (window.confirm(\"Confirma remoção do aluno: \" + aluno.ra)) {\r\n                  console.log(\"entrou no confirm\");\r\n                  axios['delete'](url, aluno)\r\n                      .then(resp => {\r\n                          const lista = this.getListaAtualizada(aluno, false)\r\n                          this.setState({ aluno: initialState.aluno, lista })\r\n                      })\r\n              }\r\n          }\r\n  \r\n  \r\n      const renderTable = () => {\r\n              return (\r\n                  <div className=\"inclui-container\">\r\n                      <label> RA: </label>\r\n                      <input\r\n                          type=\"text\"\r\n                          id=\"ra\"\r\n                          placeholder=\"RA do aluno\"\r\n                          className=\"form-input\"\r\n                          name=\"ra\"\r\n  \r\n                          value={this.state.aluno.ra}\r\n  \r\n                          onChange={e => this.atualizaCampo(e)}\r\n                      />\r\n                      <label> Nome: </label>\r\n                      <input\r\n                          type=\"text\"\r\n                          id=\"nome\"\r\n                          placeholder=\"Nome do aluno\"\r\n                          className=\"form-input\"\r\n                          name=\"nome\"\r\n  \r\n                          value={this.state.aluno.nome}\r\n  \r\n                          onChange={e => this.atualizaCampo(e)}\r\n                      />\r\n  \r\n                      <label> Código do Curso: </label>\r\n                      <select name=\"nomeCurso\" id=\"codigoCurso\">\r\n                          {this.state.listaCurso.map((curso) =>\r\n                              <option key={curso.id} value={curso.codCurso}>{curso.nomeCurso}</option>\r\n                          )}\r\n                      </select>\r\n  \r\n                      <button className=\"btnSalvar\"\r\n                          onClick={e => this.salvar(e)} >\r\n                          Salvar\r\n                      </button>\r\n                      <button className=\"btnCancelar\"\r\n                          onClick={e => this.limpar(e)} >\r\n                          Cancelar\r\n                      </button>\r\n                  </div>\r\n              )\r\n          }\r\n  */\n\n  const renderTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listagem\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"listaAlunos\",\n        id: \"tblListaAlunos\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"cabecTabela\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"tabTituloRa\",\n              children: \"Ra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"tabTituloNome\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"tabTituloCurso\",\n              children: \"Curso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.lista.map(aluno => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.ra\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluno.codCurso\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.carregar(aluno),\n                children: \"Altera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.remover(aluno),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }, this)]\n          }, aluno.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    className: \"main\",\n    title: title,\n    children: this.renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 17\n  }, this);\n}\n\n_s(AlterarProd, \"25ofSusWDIKMylQd8fd7IyUiuFo=\");\n\n_c = AlterarProd;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlterarProd\");","map":{"version":3,"names":["React","useEffect","useState","UserService","axios","Main","title","urlAPI","initialState","produto","id_produto","valor","nome","descricao","lista","user","JSON","parse","localStorage","getItem","AlterarProd","props","setLista","mens","setMens","getAdmBoard","then","response","console","log","data","error","_mens","message","toString","renderTable","state","map","aluno","ra","codCurso","carregar","remover","id"],"sources":["C:/Users/adria/Documents/GitHub/GameStore/React/src/components/AlterarProd/AlterarProd.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport UserService from '../../Services/UserService';\r\nimport axios from 'axios';\r\nimport './AlterarProd.css';\r\nimport Main from '../template/Main';\r\n\r\nconst title = \"Alteração de produtos\";\r\n\r\n\r\nconst urlAPI = \"http://localhost:5255/api/AlterarProduto\";\r\n\r\nconst initialState = {\r\n    produto: { id_produto: 0, valor: 0.0, nome: '', descricao: '' },\r\n    lista: [],\r\n}\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nexport default function AlterarProd(props) {\r\n\r\n    const [lista, setLista] = useState([]);\r\n    const [mens, setMens] = useState([]);\r\n\r\n        /*    \r\n            axios(urlAPI).then(resp => {\r\n                this.setState({ lista: resp.data })\r\n            })\r\n        }\r\n        */\r\n        useEffect(() => {\r\n            UserService.getAdmBoard().then(\r\n                (response) => {\r\n                    console.log(\"useEffect getAdmBoard: \" + response.data)\r\n                    setLista(response.data);\r\n                    setMens(null);\r\n                },\r\n                (error) => {\r\n                    const _mens =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setMens(_mens);\r\n                    console.log(\"_mens: \" + _mens);\r\n                }\r\n            );\r\n        }, []);\r\n\r\n/*   \r\n        limpar() {\r\n            this.setState({ aluno: initialState.aluno });\r\n        }\r\n\r\n        salvar() {\r\n            let codigoCurso = document.getElementById('codigoCurso').value;\r\n            const aluno = this.state.aluno;\r\n\r\n            aluno.codCurso = Number(codigoCurso);\r\n            const metodo = aluno.id ? 'put' : 'post';\r\n            const url = aluno.id ? `${urlAPI}/${aluno.id}` : urlAPI;\r\n            axios[metodo](url, aluno)\r\n                .then(resp => {\r\n                    const lista = this.getListaAtualizada(resp.data)\r\n                    this.setState({ aluno: initialState.aluno, lista })\r\n                })\r\n        }\r\n\r\n\r\n        getListaAtualizada(aluno, add = true) {\r\n            const lista = this.state.lista.filter(a => a.id !== aluno.id);\r\n            if (add) lista.unshift(aluno);\r\n            return lista;\r\n        }\r\n\r\n        atualizaCampo(event) {\r\n            //clonar usuário a partir do state, para não alterar o state diretamente\r\n            const aluno = { ...this.state.aluno };\r\n            //usar o atributo NAME do input para identificar o campo a ser atualizado\r\n            aluno[event.target.name] = event.target.value;\r\n            //atualizar o state\r\n            this.setState({ aluno });\r\n        }\r\n\r\n        carregar(aluno) {\r\n            this.setState({ aluno })\r\n        }\r\n\r\n        remover(aluno) {\r\n            const url = urlAPI + \"/\" + aluno.id;\r\n            if (window.confirm(\"Confirma remoção do aluno: \" + aluno.ra)) {\r\n                console.log(\"entrou no confirm\");\r\n                axios['delete'](url, aluno)\r\n                    .then(resp => {\r\n                        const lista = this.getListaAtualizada(aluno, false)\r\n                        this.setState({ aluno: initialState.aluno, lista })\r\n                    })\r\n            }\r\n        }\r\n\r\n\r\n    const renderTable = () => {\r\n            return (\r\n                <div className=\"inclui-container\">\r\n                    <label> RA: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"ra\"\r\n                        placeholder=\"RA do aluno\"\r\n                        className=\"form-input\"\r\n                        name=\"ra\"\r\n\r\n                        value={this.state.aluno.ra}\r\n\r\n                        onChange={e => this.atualizaCampo(e)}\r\n                    />\r\n                    <label> Nome: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nome\"\r\n                        placeholder=\"Nome do aluno\"\r\n                        className=\"form-input\"\r\n                        name=\"nome\"\r\n\r\n                        value={this.state.aluno.nome}\r\n\r\n                        onChange={e => this.atualizaCampo(e)}\r\n                    />\r\n\r\n                    <label> Código do Curso: </label>\r\n                    <select name=\"nomeCurso\" id=\"codigoCurso\">\r\n                        {this.state.listaCurso.map((curso) =>\r\n                            <option key={curso.id} value={curso.codCurso}>{curso.nomeCurso}</option>\r\n                        )}\r\n                    </select>\r\n\r\n                    <button className=\"btnSalvar\"\r\n                        onClick={e => this.salvar(e)} >\r\n                        Salvar\r\n                    </button>\r\n                    <button className=\"btnCancelar\"\r\n                        onClick={e => this.limpar(e)} >\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n*/\r\n    const renderTable = () => {\r\n            return (\r\n                <div className=\"listagem\">\r\n                    <table className=\"listaAlunos\" id=\"tblListaAlunos\">\r\n                        <thead>\r\n                            <tr className=\"cabecTabela\">\r\n                                <th className=\"tabTituloRa\">Ra</th>\r\n                                <th className=\"tabTituloNome\">Nome</th>\r\n                                <th className=\"tabTituloCurso\">Curso</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.lista.map(\r\n                                (aluno) =>\r\n\r\n                                    <tr key={aluno.id}>\r\n                                        <td>{aluno.ra}</td>\r\n                                        <td>{aluno.nome}</td>\r\n                                        <td>{aluno.codCurso}</td>\r\n                                        <td>\r\n                                            <button onClick={() => this.carregar(aluno)} >\r\n                                                Altera\r\n                                            </button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button onClick={() => this.remover(aluno)} >\r\n                                                Remove\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n       \r\n            return (\r\n                <Main className='main' title={title}>\r\n\r\n                 \r\n                    {this.renderTable()}\r\n\r\n\r\n                </Main>\r\n            )\r\n        }\r\n\r\n    \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}